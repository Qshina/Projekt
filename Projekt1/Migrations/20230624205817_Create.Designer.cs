// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.Model;

#nullable disable

namespace Projekt.Migrations
{
    [DbContext(typeof(MusicContext))]
    [Migration("20230624205817_Create")]
    partial class Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("Projekt.Model.Albums", b =>
                {
                    b.Property<string>("album_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("artist_NAME")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("release_date")
                        .HasColumnType("TEXT");

                    b.HasKey("album_name");

                    b.HasIndex("artist_NAME");

                    b.ToTable("Album", (string)null);
                });

            modelBuilder.Entity("Projekt.Model.Artists", b =>
                {
                    b.Property<string>("artist_name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("First_Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last_Name")
                        .HasColumnType("TEXT");

                    b.HasKey("artist_name");

                    b.ToTable("Artist", (string)null);
                });

            modelBuilder.Entity("Projekt.Model.Genres", b =>
                {
                    b.Property<string>("genre")
                        .HasColumnType("TEXT");

                    b.HasKey("genre");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("Projekt.Model.Tracks", b =>
                {
                    b.Property<int>("id_track")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("album_NAME")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("creation_year")
                        .HasColumnType("TEXT");

                    b.Property<string>("genre_NAME")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id_track");

                    b.HasIndex("album_NAME");

                    b.HasIndex("genre_NAME");

                    b.ToTable("Track", (string)null);
                });

            modelBuilder.Entity("Projekt.Model.Albums", b =>
                {
                    b.HasOne("Projekt.Model.Artists", "Artists")
                        .WithMany()
                        .HasForeignKey("artist_NAME");

                    b.Navigation("Artists");
                });

            modelBuilder.Entity("Projekt.Model.Tracks", b =>
                {
                    b.HasOne("Projekt.Model.Albums", "Albums")
                        .WithMany()
                        .HasForeignKey("album_NAME");

                    b.HasOne("Projekt.Model.Genres", "Genres")
                        .WithMany()
                        .HasForeignKey("genre_NAME");

                    b.Navigation("Albums");

                    b.Navigation("Genres");
                });
#pragma warning restore 612, 618
        }
    }
}
